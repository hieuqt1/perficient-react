{"version":3,"sources":["components/Expenses/ExpenseFilter.js","components/Expenses/Card.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseFilter","props","className","value","selected","onChange","event","onChangeFilter","target","Card","classes","children","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","map","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","expense","date","getMonth","amount","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","title","ExpensesList","items","length","id","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"8aAsBeA,EApBO,SAACC,GAKrB,OACE,qBAAKC,UAAU,kBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,mDACA,yBAAQC,MAAOF,EAAMG,SAAUC,SAPnC,SAAgCC,GAC5BL,EAAMM,eAAeD,EAAME,OAAOL,QAMlC,UACE,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,2B,MCUKM,MAvBf,SAAcR,GAMV,IAAMS,EAAU,QAAUT,EAAMC,UAChC,OAYI,aAVA,CAUA,OAAKA,UAAWQ,EAAhB,SAA0BT,EAAMU,Y,aClBzB,SAASC,EAASX,GAE7B,IAAIY,EAAgB,KAKpB,OAJIZ,EAAMa,SAAW,IACjBD,EAAgBE,KAAKC,MAAOf,EAAME,MAAQF,EAAMa,SAAY,KAAO,KAGhE,sBAAKZ,UAAU,YAAf,UACH,qBAAKA,UAAU,mBAAf,SACI,qBAAKA,UAAU,kBAAkBe,MAAO,CAACC,OAAQL,OAIrD,qBAAKX,UAAU,mBAAf,SACKD,EAAMkB,W,MCbJ,SAASC,EAAMnB,GAC1B,IAAMoB,EAAkBpB,EAAMqB,WAAWC,KAAI,SAAAC,GAAS,OAAIA,EAAUrB,SAC9DsB,EAAeV,KAAKW,IAAL,MAAAX,KAAI,YAAQM,IAEnC,OACE,qBAAKnB,UAAU,QAAf,SACGD,EAAMqB,WAAWC,KAAI,SAACC,GAAD,OACpB,cAAC,EAAD,CAEErB,MAAOqB,EAAUrB,MACjBW,SAAUW,EACVN,MAAOK,EAAUL,OAHZK,EAAUL,YCTV,SAASQ,EAAc1B,GAClC,IADyC,EACnC2B,EAAkB,CACpB,CAACT,MAAO,MAAOhB,MAAO,GACtB,CAACgB,MAAO,MAAOhB,MAAO,GACtB,CAACgB,MAAO,MAAOhB,MAAO,GACtB,CAACgB,MAAO,MAAOhB,MAAO,GACtB,CAACgB,MAAO,MAAOhB,MAAO,GACtB,CAACgB,MAAO,MAAOhB,MAAO,GACtB,CAACgB,MAAO,MAAOhB,MAAO,GACtB,CAACgB,MAAO,MAAOhB,MAAO,GACtB,CAACgB,MAAO,MAAOhB,MAAO,GACtB,CAACgB,MAAO,MAAOhB,MAAO,GACtB,CAACgB,MAAO,MAAOhB,MAAO,GACtB,CAACgB,MAAO,MAAOhB,MAAO,IAbe,cAgBnBF,EAAM4B,UAhBa,IAgBzC,2BAAsC,CAAC,IAA5BC,EAA2B,QAElCF,EADqBE,EAAQC,KAAKC,YACJ7B,OAAS2B,EAAQG,QAlBV,8BAoBzC,OAAO,cAAC,EAAD,CAAOX,WAAYM,I,YCPfM,MAdf,SAAqBjC,GACnB,IAAMkC,EAAQlC,EAAM8B,KAAKK,eAAe,QAAS,CAAED,MAAO,SACpDE,EAAMpC,EAAM8B,KAAKK,eAAe,QAAS,CAAEC,IAAK,YAChDC,EAAOrC,EAAM8B,KAAKQ,cAExB,OACE,sBAAKrC,UAAU,eAAf,UACE,qBAAKA,UAAU,sBAAf,SAAsCiC,IACtC,qBAAKjC,UAAU,oBAAf,SAAoCmC,IACpC,qBAAKnC,UAAU,qBAAf,SAAqCoC,Q,MCe5BE,MAtBf,SAAqBvC,GAMnB,OACE,6BACE,eAAC,EAAD,CAAMC,UAAU,eAAhB,UACE,cAAC,EAAD,CAAa6B,KAAM9B,EAAM8B,OACzB,sBAAK7B,UAAU,4BAAf,UAGE,6BAAKD,EAAMwC,QACX,sBAAKvC,UAAU,sBAAf,cAAuCD,EAAMgC,mB,MCdxC,SAASS,EAAazC,GACjC,OAA2B,IAAvBA,EAAM0C,MAAMC,OACP,oBAAI1C,UAAU,0BAAd,+BAGF,oBAAIA,UAAU,gBAAd,SACFD,EAAM0C,MAAMpB,KAAI,SAACO,GAAD,OACjB,cAAC,EAAD,CAEEW,MAAOX,EAAQW,MACfR,OAAQH,EAAQG,OAChBF,KAAMD,EAAQC,MAHTD,EAAQe,SCoBRC,MAzBf,SAAkB7C,GAChB,MAAwC8C,mBAAS,QAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAMMC,EAAmBjD,EAAM0C,MAAMQ,QAAO,SAAArB,GAC1C,OAAOA,EAAQC,KAAKQ,cAAca,aAAeJ,KAGnD,OACE,8BACE,eAAC,EAAD,CAAM9C,UAAU,WAAhB,UACE,cAAC,EAAD,CACEE,SAAU4C,EACVzC,eAbR,SAA6B8C,GAC3BJ,EAAgBI,MAcZ,cAAC1B,EAAD,CAAeE,SAAUqB,IACzB,cAAC,EAAD,CAAcP,MAAOO,U,mBC4DdI,MAnFf,SAAqBrD,GACnB,MAAwC8C,mBAAS,IAAjD,mBAAOQ,EAAP,KAAqBC,EAArB,KACA,EAA0CT,mBAAS,IAAnD,mBAAOU,EAAP,KAAsBC,EAAtB,KACA,EAAsCX,mBAAS,IAA/C,mBAAOY,EAAP,KAAoBC,EAApB,KAwCA,OACE,sBAAMC,SAdR,SAAuBvD,GACrBA,EAAMwD,iBACN,IAAMC,EAAc,CAClBtB,MAAOc,EACPtB,QAASwB,EACT1B,KAAM,IAAIiC,KAAKL,IAEjB1D,EAAMgE,kBAAkBF,GACxBP,EAAgB,IAChBE,EAAiB,IACjBE,EAAe,KAIf,SACE,sBAAK1D,UAAU,wBAAf,UACE,sBAAKA,UAAU,wBAAf,UACE,2CACA,uBACEgE,KAAK,OACL/D,MAAOoD,EACPlD,SAxCV,SAA4BC,GAC1BkD,EAAgBlD,EAAME,OAAOL,aA0CzB,sBAAKD,UAAU,wBAAf,UACE,4CACA,uBACEgE,KAAK,SACLC,IAAI,OACJC,KAAK,OACLjE,MAAOsD,EACPpD,SAzCV,SAA6BC,GAC3BoD,EAAiBpD,EAAME,OAAOL,aA2C1B,sBAAKD,UAAU,wBAAf,UACE,0CACA,uBACEgE,KAAK,OACLC,IAAI,aACJzC,IAAI,aACJvB,MAAOwD,EACPtD,SA9CV,SAA2BC,GACzBsD,EAAetD,EAAME,OAAOL,aAgDxB,sBAAKD,UAAU,uBAAf,UACE,wBAAQgE,KAAK,SAASG,QAASpE,EAAMqE,SAArC,oBACA,wBAAQJ,KAAK,SAAb,kCCxCKK,MAnCf,SAAoBtE,GAClB,MAAkC8C,oBAAS,GAA3C,mBAAOyB,EAAP,KAAkBC,EAAlB,KAmBA,OACE,sBAAKvE,UAAU,cAAf,WACIsE,GACA,wBAAQH,QAXc,WAC1BI,GAAa,IAUT,6BAEDD,GACC,cAAC,EAAD,CACEP,kBAxBuB,SAACS,GAC9B,IAAMX,EAAW,2BACZW,GADY,IAEf7B,GAAI9B,KAAK4D,SAASvB,aAEpBnD,EAAM2E,aAAab,GACnBU,GAAa,IAmBPH,SAZmB,WACzBG,GAAa,UChBXI,G,MAAiB,CACrB,CACEhC,GAAI,KACJJ,MAAO,eACPR,OAAQ,MACRF,KAAM,IAAIiC,KAAK,KAAM,EAAG,KAE1B,CAAEnB,GAAI,KAAMJ,MAAO,SAAUR,OAAQ,OAAQF,KAAM,IAAIiC,KAAK,KAAM,EAAG,KACrE,CACEnB,GAAI,KACJJ,MAAO,gBACPR,OAAQ,OACRF,KAAM,IAAIiC,KAAK,KAAM,EAAG,KAE1B,CACEnB,GAAI,KACJJ,MAAO,oBACPR,OAAQ,IACRF,KAAM,IAAIiC,KAAK,KAAM,EAAG,OAyBbc,MArBf,WACE,MAAgC/B,mBAAS8B,GAAzC,mBAAOhD,EAAP,KAAiBkD,EAAjB,KAOA,OACE,sBAAK7E,UAAU,YAAf,UAIE,cAAC,EAAD,CAAY0E,aAVhB,SAA2B9C,GACzBiD,GAAY,SAACC,GACX,MAAM,CAAElD,GAAR,mBAAoBkD,UAWpB,cAAC,EAAD,CAAUrC,MAAOd,QCjCvBoD,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.19cc1f51.chunk.js","sourcesContent":["import './ExpenseFilter.css';\r\n\r\nconst ExpenseFilter = (props) => {\r\n\r\n    function dropdownChangeHandler (event) {\r\n        props.onChangeFilter(event.target.value);\r\n    }\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseFilter;","import './Card.css'\r\n\r\nfunction Card(props) {\r\n\r\n    /**classes takes in any tag's className as arguments and adds 'card' tag to it as well\r\n     * \r\n     * ex: <div className = 'example'> now becomes <div className = 'card example'>\r\n    */\r\n    const classes = 'card ' + props.className;\r\n    return (\r\n\r\n        /**props.children takes in all content between tags as arguments\r\n         * \r\n         * ex: <div>This is sample output\r\n         * to make some fluff content as \r\n         * an example for clarity</div>\r\n         * \r\n         * .children takes in 'This is sample output\r\n         * to make some fluff content as \r\n         * an example for clarity' as arguments\r\n        */\r\n        <div className={classes}>{props.children}</div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react'\r\nimport './ChartBar.css'\r\n\r\nexport default function ChartBar(props) {\r\n\r\n    let barFillHeight = '0%';\r\n    if (props.maxValue > 0) {\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n    }\r\n\r\n    return <div className='chart-bar'>\r\n        <div className='chart-bar__inner'>\r\n            <div className='chart-bar__fill' style={{height: barFillHeight}}>\r\n            \r\n            </div>\r\n        </div>\r\n        <div className='chart-bar__label'>\r\n            {props.label}\r\n        </div>\r\n    </div>\r\n}","import React from \"react\";\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nexport default function Chart(props) {\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues)\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Chart from '../Chart/Chart';\r\n\r\nexport default function ExpensesChart(props) {\r\n    const chartDataPoints = [\r\n        {label: 'Jan', value: 0},\r\n        {label: 'Feb', value: 0},\r\n        {label: 'Mar', value: 0},\r\n        {label: 'Apr', value: 0},\r\n        {label: 'May', value: 0},\r\n        {label: 'Jun', value: 0},\r\n        {label: 'Jul', value: 0},\r\n        {label: 'Aug', value: 0},\r\n        {label: 'Sep', value: 0},\r\n        {label: 'Oct', value: 0},\r\n        {label: 'Nov', value: 0},\r\n        {label: 'Dec', value: 0},\r\n    ];\r\n\r\n    for (const expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth(); //getMonth() starts with January as 0\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n    return <Chart dataPoints={chartDataPoints} />\r\n}","import './ExpenseDate.css'\r\n\r\nfunction ExpenseDate(props) {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className='expense-date'>\r\n      <div className='expense_date__month'>{month}</div>\r\n      <div className='expense-date__day'>{day}</div>\r\n      <div className='expense_date__year'>{year}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"./Card\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nfunction ExpenseItem(props) {\r\n  {\r\n    /*useState can only be called directly within component functions, not outside or within nested functions\r\n     *useState returns an array with two elements: the original variable value and the updating function*/\r\n  }\r\n\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          {/* props.date, props.title and props.amount get their values from the title/amount attributes created in App.js */}\r\n          {/* <h2>{title}</h2> */}\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n          {/* <button onClick={clickHandler}>Change Title</button> */}\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import React from 'react'\r\nimport ExpenseItem from './ExpenseItem'\r\nimport './ExpensesList.css'\r\n\r\nexport default function ExpensesList(props) {\r\n    if (props.items.length === 0) {\r\n      return <h2 className='expenses-list__fallback'>Found no content.</h2>\r\n    }\r\n\r\n    return <ul className='expenses-list'>\r\n        {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n};","import ExpenseFilter from \"./ExpenseFilter\";\r\nimport Card from \"./Card\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport { useState } from \"react\";\r\nimport \"./Expenses.css\";\r\nimport ExpensesList from \"./ExpensesList\";\r\n\r\nfunction Expenses(props) {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n\r\n  function filterChangeHandler(selectedYear) {\r\n    setFilteredYear(selectedYear);\r\n  }\r\n\r\n  const filteredExpenses = props.items.filter(expense => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpenseFilter\r\n          selected={filteredYear}\r\n          onChangeFilter={filterChangeHandler}\r\n        />\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        <ExpensesList items={filteredExpenses}/>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import \"./ExpenseForm.css\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction ExpenseForm(props) {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  /* const [userInput, setUserInput] = useState({\r\n    enteredTitle: \"\",\r\n    enteredAmount: \"\",\r\n    enteredDate: \"\",\r\n  }); */\r\n\r\n  function titleChangeHandler(event) {\r\n    setEnteredTitle(event.target.value);\r\n    /* setUserInput({ ...userInput, enteredTitle: event.target.value });\r\n    // better way to do than line above\r\n    setUserInput((prevState) => {\r\n      return { ...prevState, enteredTitle: event.target.value };\r\n    });*/\r\n  }\r\n\r\n  function amountChangeHandler(event) {\r\n    setEnteredAmount(event.target.value);\r\n    //setUserInput({ ...userInput, enteredAmount: event.target.value });\r\n  }\r\n\r\n  function dateChangeHandler(event) {\r\n    setEnteredDate(event.target.value);\r\n    //setUserInput({ ...userInput, enteredDate: event.target.value });\r\n  }\r\n\r\n  function submitHandler(event) {\r\n    event.preventDefault();\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle('');\r\n    setEnteredAmount('');\r\n    setEnteredDate('');\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control>\">\r\n          <label>Title </label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control>\">\r\n          <label>Amount </label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control>\">\r\n          <label>Date </label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__actions\">\r\n          <button type='button' onClick={props.onCancel}>Cancel</button>\r\n          <button type=\"submit\">Add Expense</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ExpenseForm;\r\n","import \"./NewExpense.css\";\r\nimport { useState } from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nfunction NewExpense(props) {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewExpense;\r\n","import React, { useState } from \"react\";\r\nimport Expenses from \"./components/Expenses/Expenses\";\r\nimport NewExpense from \"./components/NewExpense/NewExpense\";\r\nimport \"./App.css\";\r\n\r\nconst DUMMY_EXPENSES = [\r\n  {\r\n    id: \"e1\",\r\n    title: \"Toilet Paper\",\r\n    amount: 94.12,\r\n    date: new Date(2020, 7, 14),\r\n  },\r\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\r\n  {\r\n    id: \"e3\",\r\n    title: \"Car Insurance\",\r\n    amount: 294.67,\r\n    date: new Date(2021, 2, 28),\r\n  },\r\n  {\r\n    id: \"e4\",\r\n    title: \"New Desk (Wooden)\",\r\n    amount: 450,\r\n    date: new Date(2021, 5, 12),\r\n  },\r\n];\r\n\r\nfunction App() {\r\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\r\n\r\n  function addExpenseHandler(expense) {\r\n    setExpenses((prevExpenses) => {\r\n      return [expense, ...prevExpenses];\r\n    });\r\n  }\r\n  return (\r\n    <div className=\"WholePage\">\r\n      {/* in NewExpense, we're passing the addExpenseHandler \r\n      function from App.js to NewExpense.js, where NewExpense.js \r\n      will take an object and stuff it back into the function that was passed */}\r\n      <NewExpense onAddExpense={addExpenseHandler} />\r\n      {/*can use components as custom HTML elements*/}\r\n      {/* Expenses passes the expenses list from App.js to Expenses.js to use */}\r\n      <Expenses items={expenses} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","//this file is executed first\n\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\n//.render(a, b) tells React to replace b with whatever is in a\n//document.getElementById('root') points to <div id='root'> in public/index.html file\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}